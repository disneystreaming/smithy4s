/*
 *  Copyright 2021-2022 Disney Streaming
 *
 *  Licensed under the Tomorrow Open Source Technology License, Version 1.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     https://disneystreaming.github.io/TOST-1.0.txt
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/////// THIS FILE WAS GENERATED AT BUILD TIME, AND CHECKED-IN FOR DISCOVERABILITY ///////

package smithy4s
package schema

class PartiallyAppliedTuple protected[schema](placeholder: ShapeId) {

  def apply[A0, A1](a0: Schema[A0], a1: Schema[A1]): Schema.StructSchema[(A0, A1)] = Schema.StructSchema[(A0, A1)](placeholder, Hints.empty, Vector(a0.required[(A0, A1)]("_1", _._1), a1.required[(A0, A1)]("_2", _._2)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1]))
  def apply[A0, A1, A2](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2]): Schema.StructSchema[(A0, A1, A2)] = Schema.StructSchema[(A0, A1, A2)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2)]("_1", _._1), a1.required[(A0, A1, A2)]("_2", _._2), a2.required[(A0, A1, A2)]("_3", _._3)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2]))
  def apply[A0, A1, A2, A3](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3]): Schema.StructSchema[(A0, A1, A2, A3)] = Schema.StructSchema[(A0, A1, A2, A3)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3)]("_1", _._1), a1.required[(A0, A1, A2, A3)]("_2", _._2), a2.required[(A0, A1, A2, A3)]("_3", _._3), a3.required[(A0, A1, A2, A3)]("_4", _._4)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3]))
  def apply[A0, A1, A2, A3, A4](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4]): Schema.StructSchema[(A0, A1, A2, A3, A4)] = Schema.StructSchema[(A0, A1, A2, A3, A4)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4)]("_5", _._5)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4]))
  def apply[A0, A1, A2, A3, A4, A5](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5)]("_6", _._6)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5]))
  def apply[A0, A1, A2, A3, A4, A5, A6](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6)]("_7", _._7)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7)]("_8", _._8)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]("_9", _._9)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]("_10", _._10)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]("_11", _._11)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]("_12", _._12)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11], a12: Schema[A12]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_12", _._12), a12.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]("_13", _._13)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11], arr(12).asInstanceOf[A12]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11], a12: Schema[A12], a13: Schema[A13]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_12", _._12), a12.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_13", _._13), a13.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]("_14", _._14)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11], arr(12).asInstanceOf[A12], arr(13).asInstanceOf[A13]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11], a12: Schema[A12], a13: Schema[A13], a14: Schema[A14]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_12", _._12), a12.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_13", _._13), a13.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_14", _._14), a14.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]("_15", _._15)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11], arr(12).asInstanceOf[A12], arr(13).asInstanceOf[A13], arr(14).asInstanceOf[A14]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11], a12: Schema[A12], a13: Schema[A13], a14: Schema[A14], a15: Schema[A15]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_12", _._12), a12.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_13", _._13), a13.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_14", _._14), a14.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_15", _._15), a15.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]("_16", _._16)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11], arr(12).asInstanceOf[A12], arr(13).asInstanceOf[A13], arr(14).asInstanceOf[A14], arr(15).asInstanceOf[A15]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11], a12: Schema[A12], a13: Schema[A13], a14: Schema[A14], a15: Schema[A15], a16: Schema[A16]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_12", _._12), a12.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_13", _._13), a13.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_14", _._14), a14.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_15", _._15), a15.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_16", _._16), a16.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]("_17", _._17)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11], arr(12).asInstanceOf[A12], arr(13).asInstanceOf[A13], arr(14).asInstanceOf[A14], arr(15).asInstanceOf[A15], arr(16).asInstanceOf[A16]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11], a12: Schema[A12], a13: Schema[A13], a14: Schema[A14], a15: Schema[A15], a16: Schema[A16], a17: Schema[A17]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_12", _._12), a12.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_13", _._13), a13.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_14", _._14), a14.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_15", _._15), a15.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_16", _._16), a16.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_17", _._17), a17.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]("_18", _._18)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11], arr(12).asInstanceOf[A12], arr(13).asInstanceOf[A13], arr(14).asInstanceOf[A14], arr(15).asInstanceOf[A15], arr(16).asInstanceOf[A16], arr(17).asInstanceOf[A17]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11], a12: Schema[A12], a13: Schema[A13], a14: Schema[A14], a15: Schema[A15], a16: Schema[A16], a17: Schema[A17], a18: Schema[A18]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_12", _._12), a12.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_13", _._13), a13.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_14", _._14), a14.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_15", _._15), a15.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_16", _._16), a16.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_17", _._17), a17.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_18", _._18), a18.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]("_19", _._19)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11], arr(12).asInstanceOf[A12], arr(13).asInstanceOf[A13], arr(14).asInstanceOf[A14], arr(15).asInstanceOf[A15], arr(16).asInstanceOf[A16], arr(17).asInstanceOf[A17], arr(18).asInstanceOf[A18]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11], a12: Schema[A12], a13: Schema[A13], a14: Schema[A14], a15: Schema[A15], a16: Schema[A16], a17: Schema[A17], a18: Schema[A18], a19: Schema[A19]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_12", _._12), a12.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_13", _._13), a13.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_14", _._14), a14.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_15", _._15), a15.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_16", _._16), a16.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_17", _._17), a17.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_18", _._18), a18.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_19", _._19), a19.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]("_20", _._20)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11], arr(12).asInstanceOf[A12], arr(13).asInstanceOf[A13], arr(14).asInstanceOf[A14], arr(15).asInstanceOf[A15], arr(16).asInstanceOf[A16], arr(17).asInstanceOf[A17], arr(18).asInstanceOf[A18], arr(19).asInstanceOf[A19]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11], a12: Schema[A12], a13: Schema[A13], a14: Schema[A14], a15: Schema[A15], a16: Schema[A16], a17: Schema[A17], a18: Schema[A18], a19: Schema[A19], a20: Schema[A20]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_12", _._12), a12.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_13", _._13), a13.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_14", _._14), a14.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_15", _._15), a15.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_16", _._16), a16.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_17", _._17), a17.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_18", _._18), a18.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_19", _._19), a19.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_20", _._20), a20.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]("_21", _._21)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11], arr(12).asInstanceOf[A12], arr(13).asInstanceOf[A13], arr(14).asInstanceOf[A14], arr(15).asInstanceOf[A15], arr(16).asInstanceOf[A16], arr(17).asInstanceOf[A17], arr(18).asInstanceOf[A18], arr(19).asInstanceOf[A19], arr(20).asInstanceOf[A20]))
  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](a0: Schema[A0], a1: Schema[A1], a2: Schema[A2], a3: Schema[A3], a4: Schema[A4], a5: Schema[A5], a6: Schema[A6], a7: Schema[A7], a8: Schema[A8], a9: Schema[A9], a10: Schema[A10], a11: Schema[A11], a12: Schema[A12], a13: Schema[A13], a14: Schema[A14], a15: Schema[A15], a16: Schema[A16], a17: Schema[A17], a18: Schema[A18], a19: Schema[A19], a20: Schema[A20], a21: Schema[A21]): Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)] = Schema.StructSchema[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)](placeholder, Hints.empty, Vector(a0.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_1", _._1), a1.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_2", _._2), a2.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_3", _._3), a3.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_4", _._4), a4.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_5", _._5), a5.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_6", _._6), a6.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_7", _._7), a7.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_8", _._8), a8.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_9", _._9), a9.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_10", _._10), a10.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_11", _._11), a11.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_12", _._12), a12.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_13", _._13), a13.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_14", _._14), a14.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_15", _._15), a15.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_16", _._16), a16.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_17", _._17), a17.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_18", _._18), a18.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_19", _._19), a19.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_20", _._20), a20.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_21", _._21), a21.required[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]("_22", _._22)), arr => (arr(0).asInstanceOf[A0], arr(1).asInstanceOf[A1], arr(2).asInstanceOf[A2], arr(3).asInstanceOf[A3], arr(4).asInstanceOf[A4], arr(5).asInstanceOf[A5], arr(6).asInstanceOf[A6], arr(7).asInstanceOf[A7], arr(8).asInstanceOf[A8], arr(9).asInstanceOf[A9], arr(10).asInstanceOf[A10], arr(11).asInstanceOf[A11], arr(12).asInstanceOf[A12], arr(13).asInstanceOf[A13], arr(14).asInstanceOf[A14], arr(15).asInstanceOf[A15], arr(16).asInstanceOf[A16], arr(17).asInstanceOf[A17], arr(18).asInstanceOf[A18], arr(19).asInstanceOf[A19], arr(20).asInstanceOf[A20], arr(21).asInstanceOf[A21]))

}